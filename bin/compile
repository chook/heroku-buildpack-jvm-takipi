#!/usr/bin/env bash

set -e

BUILDPACKS="https://github.com/heroku/heroku-buildpack-java.git
https://github.com/heroku/heroku-buildpack-gradle.git
https://github.com/heroku/heroku-buildpack-grails.git 
https://github.com/heroku/heroku-buildpack-scala.git 
https://github.com/heroku/heroku-buildpack-play.git"

TAKIPI_BUILDPACK="https://github.com/takipi/heroku-buildpack-takipi.git"

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

unset GIT_DIR

function handle_buildpack() {
  BUILDPACK=$1

  dir=$(mktemp -t buildpackXXXXX)
  rm -rf $dir

  url=${BUILDPACK%#*}
  branch=${BUILDPACK#*#}

  if [ "$branch" == "$url" ]; then
    branch=""
  fi

  if [ "$url" != "" ]; then
    echo "=====> Downloading Buildpack: $url"

    if [[ "$url" =~ \.tgz$ ]]; then
      mkdir -p "$dir"
      curl -s "$url" | tar xvz -C "$dir" #>/dev/null 2>&1
    else
      echo "About to clone $url to $dir"
      git clone $url $dir #>/dev/null 2>&1
    fi
    cd $dir
    echo "Got here?"
    if [ "$branch" != "" ]; then
      git checkout $branch #>/dev/null 2>&1
    fi

    chmod +x $dir/bin/{detect,compile,release}

    echo "Before detect"
    framework=$($dir/bin/detect $1)
    echo "After detect $framework"
    if [ $? == 0 ]; then
      echo "=====> Detected Framework: $framework"
      $dir/bin/compile $1 $2

      if [ $? != 0 ]; then
        exit 1
      fi

      if [ ! -f $1/last_pack_release.out ]; then
        $dir/bin/release $1 > $1/last_pack_release.out
      fi

      return 0 # Found a framework. No need to search more
    fi
  fi
}

for BUILDPACK in $BUILDPACKS; do
  handle_buildpack $BUILDPACK
  [ $? == 0 ] && break
done

handle_buildpack $TAKIPI_BUILDPACK